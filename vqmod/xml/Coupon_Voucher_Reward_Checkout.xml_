<modification>
    <id>Coupon Voucher Reward Checkout</id>
    <version>1.4.0</version>
    <vqmver>2.1.7</vqmver>
    <author>Samdz: issamoc@gmail.com</author>
    
        
    
    <file name="catalog/controller/checkout/payment_method.php">
        <operation>
            <search position="after"><![CDATA[
        $this->data['text_comments'] = $this->language->get('text_comments');
      ]]></search>
            <add><![CDATA[
      $this->data['coupon_status'] = $this->config->get('coupon_status');
      
      $this->data['entry_payment_coupon'] = $this->language->get('entry_payment_coupon');
      $this->data['text_payment_coupon'] = $this->language->get('text_payment_coupon');
      $this->data['text_payment_coupon_success'] = $this->language->get('text_payment_coupon_success');
      $this->data['button_coupon'] = $this->language->get('button_coupon');
      $this->data['error_empty_coupon'] = $this->language->get('error_empty_coupon');
      
      $this->data['voucher_status'] = $this->config->get('voucher_status');
      
      $this->data['entry_payment_voucher'] = $this->language->get('entry_payment_voucher');
      $this->data['text_payment_voucher'] = $this->language->get('text_payment_voucher');
      $this->data['text_payment_voucher_success'] = $this->language->get('text_payment_voucher_success');
      $this->data['button_voucher'] = $this->language->get('button_voucher');
      $this->data['error_empty_voucher'] = $this->language->get('error_empty_voucher');

      
      $points = $this->customer->getRewardPoints();
	  		
      $points_total = 0;
       	
      foreach ($this->cart->getProducts() as $product) {
      	 if ($product['points']) {
      		$points_total += $product['points'];
    	 }
      }
      
      $this->data['reward_status'] = ($points && $points_total && $this->config->get('reward_status'));
                  
      $this->data['entry_payment_reward'] = sprintf($this->language->get('entry_payment_reward'), $points_total);
      $this->data['text_payment_reward'] = sprintf($this->language->get('text_payment_reward'), $points);
      $this->data['text_payment_reward_success'] = $this->language->get('text_payment_reward_success');
      $this->data['button_reward'] = $this->language->get('button_reward');
      $this->data['text_next_choice'] = $this->language->get('text_next_choice');
      
      if (isset($this->request->post['next'])) {
       	$this->data['next'] = $this->request->post['next'];
      } else {
       	$this->data['next'] = '';
      }

      ]]></add>
        </operation>
        <operation>
            <search position="before"><![CDATA[
        $this->data['text_payment_method'] = $this->language->get('text_payment_method');
      ]]></search>
            <add><![CDATA[
		$this->load->model('setting/extension');
		
		$total_data = array();					
		$total = 0;
		$taxes = $this->cart->getTaxes();
		
		if (($this->config->get('config_customer_price') && $this->customer->isLogged()) || !$this->config->get('config_customer_price')) {
			$sort_order = array(); 
			
			$results = $this->model_setting_extension->getExtensions('total');
			
			foreach ($results as $key => $value) {
				$sort_order[$key] = $this->config->get($value['code'] . '_sort_order');
			}
			
			array_multisort($sort_order, SORT_ASC, $results);
			
			foreach ($results as $result) {
				if ($this->config->get($result['code'] . '_status')) {
					$this->load->model('total/' . $result['code']);
		
					$this->{'model_total_' . $result['code']}->getTotal($total_data, $total, $taxes);
				}
				
				$sort_order = array(); 
			  
				foreach ($total_data as $key => $value) {
					$sort_order[$key] = $value['sort_order'];
				}
	
				array_multisort($sort_order, SORT_ASC, $total_data);			
			}		
		}
		
		$this->data['totals'] = $total_data;
      ]]></add>
        </operation>

    </file>

    <file name="catalog/language/*/checkout/checkout.php">
        <operation>
            <search position="before"><![CDATA[
        ?>
      ]]></search>
            <add><![CDATA[
        $_['entry_payment_coupon']        = 'Digite seu código de cupom aqui:';
        $_['text_payment_coupon']         = 'Usar código de cupom';
        $_['text_payment_coupon_success'] = 'Sucesso: seu cupom de desconto tem sido aplicado com sucesso a sua ordem!. Você vai vê-lo na próxima etapa check-out ';
        $_['button_coupon']               = 'Aplicar cupom';
        $_['error_empty_coupon']          = 'Aviso: por favor, insira o código do cupom de desconto para usar!';

        $_['entry_payment_voucher']       = 'Digite seu código de vale-presente aqui:';
        $_['text_payment_voucher']        = 'Usar vale-presente';
        $_['text_payment_voucher_success']= 'Sucesso: Seu código de vale-presente foi aplicado com sucesso a sua ordem!. Você vai vê-lo na próxima etapa check-out ';
        $_['button_voucher']              = 'Aplicar vale-presente';
        $_['error_empty_voucher']         = 'Aviso: Por favor, digite o código do vale-presente para usar!';

        $_['entry_payment_reward']        = 'Pontos para usar (Máximo %s):';
        $_['text_payment_reward']         = 'Usar pontos de fidelidade (Disponíveis %s)';
        $_['text_payment_reward_success'] = 'Sucesso: foi aplicado o desconto de pontos de fidelidade a sua ordem!. Você vai vê-lo na próxima etapa check-out ';
        $_['button_reward']               = 'Aplicar pontos de fidelidade';

        $_ ['text_next_choice']           = 'Escolha se você tiver um código de desconto, vale presente ou pontos de fidelidade que você deseja usar.';
      ]]></add>
        </operation>
    </file>  

    <file name="catalog/view/theme/*/template/checkout/payment_method.tpl">
        <operation>
			<search position="after" offset="2"><![CDATA[<textarea name="comment"]]></search>
			<add><![CDATA[
              <?php foreach ($totals as $total) { ?><?php } ?>
              <?php if (($coupon_status || $voucher_status || $reward_status)&& ($total['value'] > 0)) { ?>
              <div id="vc-messages"></div>
              <div class="content">
                <p><?php echo $text_next_choice; ?></p>
                <table class="radio">
                  <?php if ($coupon_status && $total['value'] > 0) { ?>
                  <tr class="highlight">
                    <td><?php if ($next == 'coupon') { ?>
                      <input type="radio" name="next" value="coupon" id="use_coupon" checked="checked" />
                      <?php } else { ?>
                      <input type="radio" name="next" value="coupon" id="use_coupon" />
                      <?php } ?></td>
                    <td><label for="use_coupon"><?php echo $text_payment_coupon; ?></label></td>
                  </tr>
                  <?php } ?>
                 <?php if ($voucher_status && $total['value'] > 0) { ?>
                  <tr class="highlight">
                    <td><?php if ($next == 'voucher') { ?>
                      <input type="radio" name="next" value="voucher" id="use_voucher" checked="checked" />
                      <?php } else { ?>
                      <input type="radio" name="next" value="voucher" id="use_voucher" />
                      <?php } ?></td>
                    <td><label for="use_voucher"><?php echo $text_payment_voucher; ?></label></td>
                  </tr>
                  <?php } ?>
                  <?php if ($reward_status && $total['value'] > 0) { ?>
                  <tr class="highlight">
                    <td><?php if ($next == 'reward') { ?>
                      <input type="radio" name="next" value="reward" id="use_reward" checked="checked" />
                      <?php } else { ?>
                      <input type="radio" name="next" value="reward" id="use_reward" />
                      <?php } ?></td>
                    <td><label for="use_reward"><?php echo $text_payment_reward; ?></label></td>
                  </tr>
                  <?php } ?>
                </table>
              </div>
              
              <div class="discount-module">
                <div id="coupon" class="content" style="display: <?php echo ($next == 'coupon' ? 'block' : 'none'); ?>;">
                  <?php echo $entry_payment_coupon; ?>&nbsp;
                  <input type="text" name="coupon" value="" />
                  &nbsp;<a id="button-coupon" class="button"><span><?php echo $button_coupon; ?></span></a>
                </div>
                <div id="voucher" class="content" style="display: <?php echo ($next == 'voucher' ? 'block' : 'none'); ?>;">
                  <?php echo $entry_payment_voucher; ?>&nbsp;
                  <input type="text" name="voucher" value="" />
                  &nbsp;<a id="button-voucher" class="button"><span><?php echo $button_voucher; ?></span></a>
                </div>
                <div id="reward" class="content" style="display: <?php echo ($next == 'reward' ? 'block' : 'none'); ?>;">
                  <?php echo $entry_payment_reward; ?>&nbsp;
                  <input type="text" name="reward" value="" />
                  &nbsp;<a id="button-reward" class="button"><span><?php echo $button_reward; ?></span></a>
                </div>
              </div>
       
            
            <script type="text/javascript"><!--
            $('#button-coupon').bind('click', function() {
            	$.ajax({
            		type: 'POST',
            		url: 'index.php?route=checkout/cart/calculateCoupon',
            		data: $('#coupon :input'),
            		dataType: 'json',
            		beforeSend: function() {
            			$('#button-coupon').attr('disabled', true);
                        $('#button-reward').attr('disabled', true);
            			$('#button-coupon').after('<span class="wait">&nbsp;<img src="catalog/view/theme/default/image/loading.gif" alt="" /></span>');
            		},
            		complete: function() {
            			$('#button-coupon').attr('disabled', false);
                        $('#button-reward').attr('disabled', false);
            			$('.wait').remove();
            		},		
            		success: function(json) {
            		    $('.success, .warning').remove();
            			if (json['error']) {
            				$('#vc-messages').before('<div class="warning">' + json['error'] + '<img src="catalog/view/theme/default/image/close.png" alt="" class="close" /></div>');
            			} 
                        if (json['success']) {
                        $.ajax({
								url: 'index.php?route=checkout/payment_method',
								dataType: 'html',
								beforeSend: function() {
									$('#payment-method .checkout-content').slideUp('slow');
								},
								success: function(html) {
									$('#payment-method .checkout-content').html(html);									
									$('#payment-method .checkout-content').slideDown('slow');
                                    $('#payment-method .checkout-content').prepend('<div class="success">' + json['success'] + '<img src="catalog/view/theme/default/image/close.png" alt="" class="close" /></div>');
									$("input[name=coupon]").val("");
								},
								error: function(xhr, ajaxOptions, thrownError) {
									alert(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);
								}
							});
                        }
            		}
            	});
            });
            //--></script>
            
            <script type="text/javascript"><!--
            $('#button-voucher').bind('click', function() {
            	$.ajax({
            		type: 'POST',
            		url: 'index.php?route=checkout/cart/calculateVoucher',
            		data: $('#voucher :input'),
            		dataType: 'json',
            		beforeSend: function() {
            			$('#button-voucher').attr('disabled', true);
                        $('#button-coupon').attr('disabled', true);
            			$('#button-voucher').after('<span class="wait">&nbsp;<img src="catalog/view/theme/default/image/loading.gif" alt="" /></span>');
            		},
            		complete: function() {
            			$('#button-voucher').attr('disabled', false);
                        $('#button-coupon').attr('disabled', false);
            			$('.wait').remove();
            		},		
            		success: function(json) {
            		    $('.success, .warning').remove();
            			if (json['error']) {
            				$('#vc-messages').before('<div class="warning">' + json['error'] + '<img src="catalog/view/theme/default/image/close.png" alt="" class="close" /></div>');
            			} 
                        if (json['success']) {
                        $.ajax({
								url: 'index.php?route=checkout/payment_method',
								dataType: 'html',
								beforeSend: function() {
									$('#payment-method .checkout-content').slideUp('slow');
								},
								success: function(html) {
									$('#payment-method .checkout-content').html(html);									
									$('#payment-method .checkout-content').slideDown('slow');
                                    $('#payment-method .checkout-content').prepend('<div class="success">' + json['success'] + '<img src="catalog/view/theme/default/image/close.png" alt="" class="close" /></div>');
									$("input[name=voucher]").val("");
								},
								error: function(xhr, ajaxOptions, thrownError) {
									alert(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);
								}
							});
                        }
            		}
            	});
            });
            //--></script> 
 
            
            <script type="text/javascript"><!--
            $('#button-reward').bind('click', function() {
            	$.ajax({
            		type: 'POST',
            		url: 'index.php?route=checkout/cart/calculateReward',
            		data: $('#reward :input'),
            		dataType: 'json',
            		beforeSend: function() {
            			$('#button-reward').attr('disabled', true);
                        $('#button-coupon').attr('disabled', true);
            			$('#button-reward').after('<span class="wait">&nbsp;<img src="catalog/view/theme/default/image/loading.gif" alt="" /></span>');
            		},
            		complete: function() {
            			$('#button-reward').attr('disabled', false);
                        $('#button-coupon').attr('disabled', false);
            			$('.wait').remove();
            		},		
            		success: function(json) {
            		    $('.success, .warning').remove();
            			if (json['error']) {
            				$('#vc-messages').before('<div class="warning">' + json['error'] + '<img src="catalog/view/theme/default/image/close.png" alt="" class="close" /></div>');
            			} 
                        if (json['success']) {
                        $.ajax({
								url: 'index.php?route=checkout/payment_method',
								dataType: 'html',
								beforeSend: function() {
									$('#payment-method .checkout-content').slideUp('slow');
								},
								success: function(html) {
									$('#payment-method .checkout-content').html(html);									
									$('#payment-method .checkout-content').slideDown('slow');
                                    $('#payment-method .checkout-content').prepend('<div class="success">' + json['success'] + '<img src="catalog/view/theme/default/image/close.png" alt="" class="close" /></div>');
									$("input[name=reward]").val("");
								},
								error: function(xhr, ajaxOptions, thrownError) {
									alert(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);
								}
							});
                        }
            		}
            	});
            });
            //--></script>
            <script type="text/javascript"><!--
            $('input[name=\'next\']').bind('change', function() {
            	$('.discount-module > div').hide();
            	
            	$('#' + this.value).show();
            });
            //--></script>
 
            <?php } ?> 
 

      ]]></add>
        </operation>
    </file>
    
    <file name="catalog/controller/checkout/cart.php">
		<operation>
			<search position="before"><![CDATA[
            protected function validateCoupon() {
            ]]></search>
			<add><![CDATA[
        	public function calculateCoupon() {
        		$this->language->load('checkout/cart');
                $this->language->load('checkout/checkout');
        		
        		$json = array();
        		
        		if (!$this->cart->hasProducts()) {
        			$json['redirect'] = $this->url->link('checkout/cart');
        		}	
        				
        		if (isset($this->request->post['coupon'])) {
        			$this->load->model('checkout/coupon');
        	
        			$coupon_info = $this->model_checkout_coupon->getcoupon($this->request->post['coupon']);			
        			
                    if (empty($this->request->post['coupon'])) {
                                        
                        $json['error'] = $this->language->get('error_empty_coupon');
                    
                    } elseif ($coupon_info) {
        				$this->session->data['coupon'] = $this->request->post['coupon'];
        				
                        $json['success'] = $this->language->get('text_payment_coupon_success');
                        
        				$json['redirect'] = $this->url->link('checkout/cart', '', 'SSL');
                        
        			} else {
                     
        				$json['error'] = $this->language->get('error_coupon');
        			}
        		}
        		
        		$this->response->setOutput(json_encode($json));
        	}
			]]></add>
		</operation>

        <operation>
			<search position="before"><![CDATA[
            protected function validateVoucher() {
            ]]></search>
			<add><![CDATA[
        	public function calculateVoucher() {
        		$this->language->load('checkout/cart');
                $this->language->load('checkout/checkout');
        		
        		$json = array();
        		
        		if (!$this->cart->hasProducts()) {
        			$json['redirect'] = $this->url->link('checkout/cart');
        		}	
        				
        		if (isset($this->request->post['voucher'])) {
        			$this->load->model('checkout/voucher');
        	
        			$voucher_info = $this->model_checkout_voucher->getvoucher($this->request->post['voucher']);			
        			
                    if (empty($this->request->post['voucher'])) {
                        $json['error'] = $this->language->get('error_empty_voucher');
                    
                    } elseif ($voucher_info) {
        				$this->session->data['voucher'] = $this->request->post['voucher'];
        				
                        $json['success'] = $this->language->get('text_payment_voucher_success');
                        
        				$json['redirect'] = $this->url->link('checkout/cart', '', 'SSL');
                        
        			} else {
                     
        				$json['error'] = $this->language->get('error_voucher');
        			}

        		}
        		
        		$this->response->setOutput(json_encode($json));
        	}
			]]></add>
		</operation>
        
        <operation>
			<search position="before"><![CDATA[
            protected function validateReward() {
            ]]></search>
			<add><![CDATA[
        	public function calculateReward() {
        		$this->language->load('checkout/cart');
                $this->language->load('checkout/checkout');
                
        		
        		$json = array();
        		
        		if (!$this->cart->hasProducts()) {
        			$json['redirect'] = $this->url->link('checkout/cart');
        		}	

                
                if (isset($this->request->post['reward'])) {
        		$this->load->model('total/reward');	
                $this->load->model('account/reward');
        	
        		    $points = $this->customer->getRewardPoints();
		
            		$points_total = 0;
            		
            		foreach ($this->cart->getProducts() as $product) {
            			if ($product['points']) {
            				$points_total += $product['points'];
            			}
            		}		
                    
                    if ($this->request->post['reward'] > $points) {
                    			$json['error'] = sprintf($this->language->get('error_points'), $this->request->post['reward']);
                    } else if ($this->request->post['reward'] > $points_total) {
                    			$json['error'] = sprintf($this->language->get('error_maximum'), $points_total);
                    
                    } else if (empty($this->request->post['reward'])) {
                    	$json['error'] = $this->language->get('error_reward');
                    
                    } else {
                    
                        $this->session->data['reward'] = $this->request->post['reward'];
        				        				
                        $json['success'] = $this->language->get('text_payment_reward_success');
                        
        				$json['redirect'] = $this->url->link('checkout/cart', '', 'SSL');
                    }
        		}
        		
        		$this->response->setOutput(json_encode($json));
        	}
			]]></add>
		</operation>
        
	</file>

</modification>